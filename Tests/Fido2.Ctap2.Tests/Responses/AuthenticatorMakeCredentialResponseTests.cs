using Fido2NetLib.Cbor;

using Xunit;

namespace Fido2NetLib.Ctap2.Tests;

public class AuthenticatorMakeCredentialResponseTests
{
    [Fact]
    public void Deserialize()
    {
        string hexEncodedCborData = @"
00                                      # status = success
a3                                      # map(3)
   01                                   # unsigned(1)
   66                                   # text(6)
      7061636b6564                      # ""packed""
   02                                   # unsigned(2)
   58 9a                                # bytes(154)
      c289c5ca9b0460f9346ab4e42d842743  # authData
      404d31f4846825a6d065be597a87051d  # ...
      410000000bf8a011f38c0a4d15800617  # ...
      111f9edc7d00108959cead5b5c48164e  # ...
      8abcd6d9435c6fa363616c6765455332  # ...
      353661785820f7c4f4a6f1d79538dfa4  # ...
      c9ac50848df708bc1c99f5e60e51b42a  # ...
      521b35d3b69a61795820de7b7d6ca564  # ...
      e70ea321a4d5d96ea00ef0e2db89dd61  # ...
      d4894c15ac585bd23684              # ...
   03                                   # unsigned(3)
   a3                                   # map(3)
      63                                # text(3)
         616c67                         # ""alg""
      26                                # -7 (ES256)
      63                                # text(3)
         736967                         # ""sig""
      58 47                             # bytes(71)
         3045022013f73c5d9d530e8cc15cc9 # signature...
         bd96ad586d393664e462d5f0561235 # ...
         e6350f2b728902210090357ff910cc # ...
         b56ac5b596511948581c8fddb4a2b7 # ...
         9959948078b09f4bdc6229         # ...
      63                                # text(3)
         783563                         # ""x5c""
      81                                # array(1)
         59 0197                        # bytes(407)
            3082019330820138a003020102  # certificate...
            020900859b726cb24b4c29300a  # ...
            06082a8648ce3d040302304731  # ...
            0b300906035504061302555331  # ...
            143012060355040a0c0b597562  # ...
            69636f20546573743122302006  # ...
            0355040b0c1941757468656e74  # ...
            696361746f7220417474657374  # ...
            6174696f6e301e170d31363132  # ...
            30343131353530305a170d3236  # ...
            313230323131353530305a3047  # ...
            310b3009060355040613025553  # ...
            31143012060355040a0c0b5975  # ...
            6269636f205465737431223020  # ...
            060355040b0c1941757468656e  # ...
            74696361746f72204174746573  # ...
            746174696f6e3059301306072a  # ...
            8648ce3d020106082a8648ce3d  # ...
            03010703420004ad11eb0e8852  # ...
            e53ad5dfed86b41e6134a18ec4  # ...
            e1af8f221a3c7d6e636c80ea13  # ...
            c3d504ff2e76211bb44525b196  # ...
            c44cb4849979cf6f896ecd2bb8  # ...
            60de1bf4376ba30d300b300906  # ...
            03551d1304023000300a06082a  # ...
            8648ce3d040302034900304602  # ...
            2100e9a39f1b03197525f7373e  # ...
            10ce77e78021731b94d0c03f3f  # ...
            da1fd22db3d030e7022100c4fa  # ...
            ec3445a820cf43129cdb00aabe  # ...
            fd9ae2d874f9c5d343cb2f113d  # ...
            a23723f3                    # ...";

        var response = AuthenticatorMakeCredentialResponse.FromCborObject(TestHelper.GetResponse(hexEncodedCborData).GetCborObject());


        Assert.Equal("packed", response.Fmt);
        Assert.Equal(154,      response.AuthData.Length);
        Assert.Equal(3,        response.AttStmt.Count);
        Assert.Equal(1,       ((CborArray)response.AttStmt["x5c"]!).Length);

    }
}
