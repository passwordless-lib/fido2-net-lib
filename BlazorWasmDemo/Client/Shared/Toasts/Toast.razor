@inject ToastService Service

<div class="toast @AdditionalClass @BackgroundCssClass">
    <div class="toast-icon">
        <i class="fa fa-@IconCssClass" aria-hidden="true"></i>
    </div>
    <div class="toast-body">
        <h5>@Heading</h5>
        <p>@Message</p>
    </div>
</div>

@code {
    private string AdditionalClass { get; set; } = "";
    private string BackgroundCssClass { get; set; } = "";
    private string IconCssClass { get; set; } = "";
    private string Heading { get; set; } = "";
    private string Message { get; set; } = "";

    protected override void OnInitialized() {
        Console.WriteLine("Init toasts");
        Service.OnShow += ShowToast;
        Service.OnHide += HideToast;
    }

    private void ShowToast(string message, ToastLevel level)
    {
        Console.WriteLine("Showing toasts");
        AdditionalClass = "toast-visible show";
        BuildToastSettings(level, message);
        StateHasChanged();
    }
    private void HideToast()
    {
        AdditionalClass = "";
        StateHasChanged();
    }
    private void BuildToastSettings(ToastLevel level, string message)
    {
        switch (level)
        {
            case ToastLevel.Info:
                BackgroundCssClass = "bg-info";
                IconCssClass = "info";
                Heading = "Info";
                break;
            case ToastLevel.Success:
                BackgroundCssClass = "bg-success";
                IconCssClass = "check";
                Heading = "Success";
                break;
            case ToastLevel.Warning:
                BackgroundCssClass = "bg-warning";
                IconCssClass = "exclamation";
                Heading = "Warning";
                break;
            case ToastLevel.Error:
                BackgroundCssClass = "bg-danger";
                IconCssClass = "times";
                Heading = "Error";
                break;
        }
        Message = message;
    }

    public void Dispose()
    {
        Service.OnShow -= ShowToast;
    }
}
